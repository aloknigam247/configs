" This should be first
set nocompatible "Set no compatible


" Variables
" `````````
let g:diff_translations=0 "Disables localisations and speeds up syntax highlighting in diff mode


" Editor Settings
" ```````````````
set conceallevel=0
set autoindent   " New line inherit the indentation of previous lines
set breakindent  " Every wrapped line will continue visually indented
set cindent      " C-style indentation"
set cpoptions+=Z " When using w! while the 'readonly' option is set,don't reset 'readonly'
set expandtab    " Convert tabs to spaces
set shiftwidth=4 " When shifting, indent using spaces
set smartindent  " Do smart autoindenting when starting a new line
set tabstop=4    " Indent using spaces
set wrap         " Wrap text


" UI Options
" ``````````
set confirm              " Raise dialog on quit if file has unsaved changes
set colorcolumn=101      " Highlight text boundary for character length greater than 100
set cursorline           " Highlight the line currently under cursor
set lazyredraw           " Don't redraw screen on macros, registers and other commands.
set diffopt+=vertical    " Open diff in vertical split
set list                 " Show special characters
set lcs=space:·,tab:\ \  " Show space as ·, tab as clear spaces
set mouse=a              " Enable mouse support
set number               " Enable line number
set splitbelow           " Place new window below on :split
set splitright           " Place new window right on :vsplit
set termguicolors        " Enable true colors support
set t_Co=256             " Set color size
set visualbell           " Flash the screen instead of beeping on errors
set wildmenu             " Show matching text on status line when <TAB>

if v:version > 800
set culopt=number,screenline " Highlight current line and line number of current window
endif


" Auto Completion Settings
" ````````````````````````
set complete+=d,t " scan for defined name/macro, include tag completion
set cscopetag     " Use cscope for tag commands.
set cscopeverbose " Give messages when adding a cscope database.
"set tagcase=smart " If search has uppercase then case sensitive search


" Search Options
" ``````````````
set hlsearch   " Enable search highlighting
set ignorecase " Ignore case when searching
set incsearch  " Incremental search that shows partial matches
set smartcase  " Switch search to case-sensitive when query contains an uppercase letter


" Config Options
" ``````````````
set noswapfile " Disable swap file
set autoread   " Auto reload changed file
set path+=**   " Look for all files in sub dirs


" Filetype Specific Options
" `````````````````````````
autocmd BufNewFile,BufRead *.cyt set syntax=sh " Set cyt filetype as bash
autocmd Filetype make set noexpandtab shiftwidth=4 softtabstop=0 nocin
filetype plugin indent on   " File based indentation


" Plugins - Vim-plug
" ``````````````````
call plug#begin()
"*Colorschemes*
  Plug 'mkarmona/materialbox' " Light, Diff
  Plug 'jacoborus/tender.vim' " Diff
  Plug 'ayu-theme/ayu-vim'    " Dark
  "Plug 'nanotech/jellybeans.vim' " Light
  "Plug 'rakr/vim-two-firewatch' " Light
  "Plug 'NLKNguyen/papercolor-theme' " Light

if v:version > 800
"*Wilder*
  Plug 'gelguy/wilder.nvim'
endif
call plug#end()


" Colorscheme
" ```````````
if strftime('%H') < 14
    "Light
    colorscheme materialbox
else
    "Dark
    colorscheme ayu
    if &diff
        colorscheme tender
    endif
endif


" Wilder Config
" `````````````
if v:version > 800
"*Wilder*
  call wilder#enable_cmdline_enter()
  set wildcharm=<Tab>
  cmap <expr> <Tab> wilder#in_context() ? wilder#next() : "\<Tab>"
  cmap <expr> <S-Tab> wilder#in_context() ? wilder#previous() : "\<S-Tab>"
  call wilder#set_option('modes', ['/', '?', ':'])
endif
